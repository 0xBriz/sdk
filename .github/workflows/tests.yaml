name: Tests

on:
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      - master
      - dev
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - '.nvmrc'
      - '.gitignore'
      - '.yarnclean'
      - 'scripts/**'
      - 'examples/**'
      - 'tsconfig.build.json'
  push:
    branches:
      - master
      - dev
      - 'renovate/*'
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - '.nvmrc'
      - '.gitignore'
      - '.yarnclean'
      - 'scripts/**'
      - 'examples/**'
      - 'tsconfig.build.json'

jobs:
  test:
    strategy:
      matrix:
        node-version:
          - lts/gallium       # most recent release of Node v16, since it's LTS
          - 17.0.1   # Node version used in .nvmrc
        platform:
          - ubuntu-latest

    if: ${{ !contains(github.event.head_commit.message, '[ci notest]') }}

    env:
      COVERAGE_DIR: ${{ github.workspace }}/coverage

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Set coveralls run flag
        id: coveralls_flag
        run: |
          FLAGVAL=node-${{ matrix.node-version }}
          if [[ ${{ github.event_name }} == 'pull_request' ]]; then
            FLAGVAL=${FLAGVAL}-pr_${{ github.event.pull_request.number }}
          fi
          echo ::set-output name=coveralls_flag::${FLAGVAL}

      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"

      - run: yarn install

      - name: Run Tests (Node ${{ matrix.node-version }})
        run: yarn -s run test:coverage
        env:
          RPC_BATCH_INTERVAL: 75
          REPORTS_DIR:        ${{ env.COVERAGE_DIR }}
          ETH_RPC_URI:        ${{ secrets.ETHEREUM_RPC_URI }}
          OPTIMISM_RPC_URI:   ${{ secrets.OPTIMISM_RPC_URI }}
          POLYGON_RPC_URI:    ${{ secrets.POLYGON_RPC_URI }}
          FANTOM_RPC_URI:     ${{ secrets.FANTOM_RPC_URI }}
          ARBITRUM_RPC_URI:   ${{ secrets.ARBITRUM_RPC_URI }}
          HARMONY_RPC_URI:    "https://api.fuzz.fi"
          INFINITE_APPROVALS_PRIVKEY:          ${{ secrets.INFINITE_APPROVALS_PRIVKEY }}
          INFINITE_APPROVALS_PRIVKEY_ADDRESS:  ${{ secrets.INFINITE_APPROVALS_PRIVKEY_ADDRESS }}
          BRIDGE_INTERACTIONS_PRIVKEY:         ${{ secrets.BRIDGE_INTERACTIONS_PRIVKEY }}
          BRIDGE_INTERACTIONS_PRIVKEY_ADDRESS: ${{ secrets.BRIDGE_INTERACTIONS_PRIVKEY_ADDRESS }}

      - name: Generate Coverage report
        run: yarn -s run coverage:report
        env:
          REPORTS_DIR: ${{ env.COVERAGE_DIR }}

      - name: Coveralls - Process coverage
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ${{ env.COVERAGE_DIR }}/lcov.info
          flag-name:    ${{ steps.coveralls_flag.outputs.coveralls_flag }}
          parallel:     true

  send-coverage:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls - Process all coverage results
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
